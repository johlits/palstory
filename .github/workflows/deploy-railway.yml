name: Deploy to Railway

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout
        uses: actions/checkout@v4

      # 2️⃣ Setup Node
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3️⃣ Install Railway CLI
      - name: Install Railway CLI
        run: npm install -g @railway/cli

      # 4️⃣ Authenticate (non-interactive)
      - name: Authenticate Railway CLI
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          if [ -z "${RAILWAY_TOKEN:-}" ]; then
            echo "RAILWAY_TOKEN is not set. Add a repository secret named RAILWAY_TOKEN (Account API token)." >&2
            exit 1
          fi
          railway login --token "$RAILWAY_TOKEN"

      # 5️⃣ Deploy prebuilt image if provided (preferred)
      - name: Deploy prebuilt image (if RAILWAY_IMAGE provided)
        if: ${{ secrets.RAILWAY_IMAGE != '' }}
        working-directory: palstory-web
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_PROJECT: ${{ secrets.RAILWAY_PROJECT }}
          RAILWAY_SERVICE_NAME: ${{ secrets.RAILWAY_SERVICE_NAME }}
          RAILWAY_IMAGE: ${{ secrets.RAILWAY_IMAGE }}
        run: |
          echo "Deploying image $RAILWAY_IMAGE to service $RAILWAY_SERVICE_NAME..."
          PROJECT_ARG=""; [ -n "${RAILWAY_PROJECT:-}" ] && PROJECT_ARG="--project \"$RAILWAY_PROJECT\""
          railway service deploy $PROJECT_ARG --service "$RAILWAY_SERVICE_NAME" --image "$RAILWAY_IMAGE" --detach

      # 6️⃣ Fallback: build from repo (current behaviour)
      - name: Deploy by building from repo (fallback when no image specified)
        if: ${{ secrets.RAILWAY_IMAGE == '' }}
        working-directory: palstory-web
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_PROJECT: ${{ secrets.RAILWAY_PROJECT }}
          RAILWAY_SERVICE_NAME: ${{ secrets.RAILWAY_SERVICE_NAME }}
        run: |
          echo "Deploying by building from palstory-web/Dockerfile to service $RAILWAY_SERVICE_NAME..."
          PROJECT_ARG=""; [ -n "${RAILWAY_PROJECT:-}" ] && PROJECT_ARG="--project \"$RAILWAY_PROJECT\""
          railway up $PROJECT_ARG --service "$RAILWAY_SERVICE_NAME" --detach

      # 7️⃣ Print deployed service URLs
      - name: Print service URLs
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_PROJECT: ${{ secrets.RAILWAY_PROJECT }}
          RAILWAY_SERVICE_NAME: ${{ secrets.RAILWAY_SERVICE_NAME }}
        run: |
          PROJECT_ARG=""; [ -n "${RAILWAY_PROJECT:-}" ] && PROJECT_ARG="--project \"$RAILWAY_PROJECT\""
          echo "Domains for service $RAILWAY_SERVICE_NAME:"
          railway domain list $PROJECT_ARG --service "$RAILWAY_SERVICE_NAME" || true
